# https://taskfile.dev

version: "3"

vars:
  TFVARS_FILE: .local.tfvars

tasks:
  default:
    cmds:
      - task: plan
    silent: true
 
  clean:
    desc: Clean all terraform artifacts/assets
    silent: true
    cmds:
      - rm -rf .terraform .terraform.lock.hcl
  
  format:
    desc: Format terraform files
    silent: true
    cmds:
      - terraform fmt --recursive {{.ROOT_DIR}}
  
  init:
    desc: Init terraform working directory
    silent: true
    dir: infra
    cmds:
      - terraform init

  validate:
    silent: true
    deps:
      - format
    dir: infra
    desc: Validate the terraform resources
    cmds:
      - terraform validate

  create_cluster:
    silent: true
    deps:
      - validate
    desc: Create the GKE cluster
    dir: infra
    cmds:
      - terraform apply -var install_harness_delegate="false" -var-file={{.TFVARS_FILE}}

  deploy_harness_delegate:
    silent: true
    deps:
      - validate
    desc: Deploy the Harness Delegate on to GKE
    dir: infra
    cmds:
      - terraform apply -var-file={{.TFVARS_FILE}} -var install_harness_delegate=true

  destroy:
    silent: true
    desc: Destroys terraform resources
    dir: infra
    cmds:
      - terraform destroy -var-file={{.TFVARS_FILE}}

  readme:
    desc: Build the README.md
    silent: true
    cmds:
      - terraform-docs {{.ROOT_DIR}} > {{.ROOT_DIR}}/README.md

  get_kubeconfig:
    silent: true
    desc: Get Kubeconfig of the cluster
    generates:
      - "{{.ROOT_DIR}}/.kube/config"
    dir: infra
    aliases:
      - kubeconfig
    cmds:
      - mkdir -p {{.ROOT_DIR}}/.kube
      - gcloud container clusters get-credentials {{.CLUSTER_NAME}} --zone={{.CLUSTER_ZONE}}
    vars:
      CLUSTER_NAME:
        sh: terraform output -raw kubernetes_cluster_name
      CLUSTER_ZONE:
        sh: terraform output -raw zone
  
  show_ksa_patch:
    silent: true
    desc: Show the Workload Identity Patch for KSA
    aliases:
       - ksa_patch
    cmds:
      - |
        terraform output -raw ksa_patch | yq .
